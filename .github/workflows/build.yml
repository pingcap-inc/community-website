name: Reusable build

on:
  workflow_call:
    inputs:
      build-env:
        required: true
        type: string
    secrets:
      SENTRY_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
      
    env:
      DOCKER_IMAGE_NAME: tidb-community-website
      DOCKER_IMAGE_TAG: ${{ inputs.build-env }}-${{ runner.os }}-${{ github.sha }}

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Config npm token
        run: npm config set //npm.pkg.github.com/:_authToken "${GITHUB_TOKEN}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js 16.14.0
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 16.14.0
          cache: 'npm'

      - name: Cache dependencies
        id: dep-caches
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('package-lock.json', 'packages/*/package-lock.json') }}
          restore-keys: ${{ runner.os }}-build

      - name: Cache build result
        uses: actions/cache@v2
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-${{ inputs.build-env }}

      - name: Build for ${{ inputs.build-env }}
        run: |
          npm run build:${{ inputs.build-env }}
          echo sentry release:
          echo tug-website@${{ github.sha }}
          echo ${{ secrets.SENTRY_TOKEN }}

        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_RELEASE: tug-website@${{ github.sha }}
  
      - name: Copy locales
        run: npm run copy:locales

      - name: Remove node_modules
        run: rm -rf node_modules packages/*/node_modules

      - name: Cache prod dependencies
        id: prod-dep-caches
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-production-${{ hashFiles('package-lock.json', 'packages/*/package-lock.json') }}
          restore-keys: ${{ runner.os }}-production

      - name: Install production deps
        run: npm ci --no-audit --production --ignore-scripts --unsafe-perm
        if: steps.prod-dep-caches.outputs.cache-hit != 'true'

#      - name: Bundle docker image
#        run: docker build . --compress -t ${{ DOCKER_IMAGE_NAME }}:${{ DOCKER_IMAGE_TAG }}
#
#      - name: Push docker image to self-hosted docker hub
#        run: |
#          docker login ${{ secrets.DOCKER_REGISTRY_ADDRESS }} --username ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
#          docker push ${{ DOCKER_IMAGE_NAME }}:${{ DOCKER_IMAGE_TAG }}
          
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}/${{ secrets.DOCKER_REGISTRY_NAMESPACE }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}/${{ secrets.DOCKER_REGISTRY_NAMESPACE }}/${{ DOCKER_IMAGE_NAME }}:${{ DOCKER_IMAGE_TAG }}

