name: Reusable build

on:
  workflow_call:
    inputs:
      build-env:
        required: true
        type: string
    secrets:
      SENTRY_TOKEN:
        required: true
      DOCKER_REGISTRY_ADDRESS:
        required: true
      DOCKER_REGISTRY_NAMESPACE:
        required: true
      DOCKER_REGISTRY_USERNAME:
        required: true
      DOCKER_REGISTRY_PASSWORD:
        required: true
      OSS_ACCESS_KEY:
        required: true
      OSS_ACCESS_SECRET:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Config npm token
        run: npm config set //npm.pkg.github.com/:_authToken "${GITHUB_TOKEN}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Use Node.js 16.17.0
        uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
          cache: 'npm'

      - name: Cache dependencies
        id: dep-caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
            !packages/ui/node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('package-lock.json', 'packages/*/package-lock.json', '!packages/ui/node_modules') }}
          restore-keys: ${{ runner.os }}-build

      - name: Cache build result
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-${{ inputs.build-env }}

      - name: Build for ${{ inputs.build-env }}
        run: |
          npm run build:${{ inputs.build-env }}
          echo sentry release:
          echo tug-website@${{ github.sha }}
          echo ${{ secrets.SENTRY_TOKEN }}

        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_RELEASE: tug-website@${{ github.sha }}

      - name: Remove node_modules
        run: rm -rf node_modules packages/*/node_modules

      - name: Cache prod dependencies
        id: prod-dep-caches
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-production-${{ hashFiles('package-lock.json', 'packages/*/package-lock.json') }}
          restore-keys: ${{ runner.os }}-production

      - name: Install production deps
        run: npm ci --no-audit --production --ignore-scripts --unsafe-perm
        if: steps.prod-dep-caches.outputs.cache-hit != 'true'

      - name: Archive dist artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            next.config.js
            sentry.server.config.js
            sentry.client.config.js
            sentry.properties
            .next/standalone
            ./packages/i18n/locales
            .dockerignore
            Dockerfile

      - name: Archive static artifacts
        uses: actions/upload-artifact@v3
        with:
          name: static
          path: |
            .next/static

      - name: Archive public artifacts
        uses: actions/upload-artifact@v3
        with:
          name: public
          path: |
            public

#      - name: Bundle docker image
#        run: docker build . --compress -t tidb-community-website:${{ inputs.build-env }}-${{ runner.os }}-${{ github.sha }}
#
#      - name: Push docker image to self-hosted docker hub
#        run: |
#          echo ${{ secrets.DOCKER_REGISTRY_PASSWORD }} | docker login ${{ secrets.DOCKER_REGISTRY_ADDRESS }}/${{ secrets.DOCKER_REGISTRY_NAMESPACE }} --username ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin
#          docker push tidb-community-website:${{ inputs.build-env }}-${{ runner.os }}-${{ github.sha }}

  push-to-docker-hub:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}/${{ secrets.DOCKER_REGISTRY_NAMESPACE }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY_ADDRESS }}/${{ secrets.DOCKER_REGISTRY_NAMESPACE }}/tidb-community-website:${{ inputs.build-env }}-${{ runner.os }}-${{ github.sha }}

  deploy-static-to-aliyun-oss:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Download static artifacts
        uses: actions/download-artifact@v3
        with:
          name: static
          path: .next/static

      - name: Deploy `.next/static` to Ali OSS
        uses: Menci/upload-to-oss@beta-v3
        with:
          access-key-id: ${{ secrets.OSS_ACCESS_KEY }}
          access-key-secret: ${{ secrets.OSS_ACCESS_SECRET }}
          bucket: tidb-net-${{ inputs.build-env }}
          endpoint: oss-accelerate.aliyuncs.com
          local-path: .next/static
          remote-path: _next/static
          no-delete-remote-files: true

  deploy-public-to-aliyun-oss:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Download public artifacts
        uses: actions/download-artifact@v3
        with:
          name: public
          path: public

      - name: Deploy `public` to Ali OSS
        uses: Menci/upload-to-oss@beta-v3
        with:
          access-key-id: ${{ secrets.OSS_ACCESS_KEY }}
          access-key-secret: ${{ secrets.OSS_ACCESS_SECRET }}
          bucket: tidb-net-${{ inputs.build-env }}
          endpoint: oss-accelerate.aliyuncs.com
          local-path: public
          remote-path: /
          no-delete-remote-files: true
