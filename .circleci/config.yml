version: 2.1

commands:
  install-deps:
    steps:
      - checkout
      - run: curl -sL https://sentry.io/get-cli/ | bash
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}
            - v1-deps
      - run: |
          npm -v
          npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-deps-{{ checksum "package-lock.json" }}

  prepare-sentry:
    steps:
      - run:
          name: Prepare Sentry env variables
          command: |
            echo "export SENTRY_RELEASE=${SENTRY_PROJECT}@${CIRCLE_SHA1}" >> $BASH_ENV

  verify-and-build:
    steps:
      - run: npm run lint
      - run: npm test
      - run:
          command: npm run build
          no_output_timeout: 5m

  copy-locales:
    steps:
      - run: npm run copy:locales

  deploy-website:
    steps:
      - run:
          name: Deploy to HK_1_HOST
          command: |
            ssh-keyscan "${HOST_HK_1_IP}" >> ~/.ssh/known_hosts 2>/dev/null
            npm run deploy

jobs:
  verify:
    docker:
      - image: circleci/node:14.13.0
    steps:
      - install-deps
      - verify-and-build

  build:
    docker:
      - image: circleci/node:14.13.0
    environment:
      SENTRY_ORG: pingcap
      SENTRY_PROJECT: tug-website
      ENABLE_SENTRY: 'true'
      SENTRY_NO_PROGRESS_BAR: '1'
    steps:
      - install-deps
      - prepare-sentry
      - verify-and-build
      - copy-locales
      - persist_to_workspace:
          root: .
          paths:
            - .next
            - public/asktug
            - public/locales
            - public/scripts

  deploy:
    docker:
      - image: circleci/node:14.13.0
    steps:
      - install-deps
      - attach_workspace:
          at: .
      - deploy-website

workflows:
  commit:
    jobs:
      - verify:
          filters:
            branches:
              ignore:
                - main

      - build:
          filters:
            branches:
              only:
                - main

      - hold-for-deploy:
          type: approval
          requires:
            - build

      - deploy:
          requires:
            - hold-for-deploy
