import React from 'react';
import NextHead from 'next/head';

import { cdn } from '~/utils';

export type IProps = {
  creator?: string;
  description?: string;
  keyword?: string | string[];
  title?: string;
  titleSuffix?: string;
  isArticle?: boolean;
};

export const CommunityHead: React.FC<IProps> = (props) => {
  const titleSuffix = 'TiDB 社区';
  const fullTitle = [props.title, titleSuffix].filter((value) => value != null).join(' | ');

  const description =
    props.description ??
    'TiDB 社区是由 TiDB 生态中的开发者、用户、Contributor、合作伙伴一起建立的分享、学习平台。在这里，我们可以自由发声，互相协助解决问题。';

  const keyword =
    props.keyword ??
    'TiDB,TiKV,HTAP,实时数仓,实时商业智能,实时数据分析,实时流处理,数据中台,弹性扩容,交易,数据服务和分析一体化,分布式数据库,社区,活动,问答,论坛,技术文章,专栏';
  const keywordStr = Array.isArray(keyword) ? keyword.join(',') : keyword;

  const googleAnalyticsId = 'GTM-K338LSD';

  const getFaviconsPath = (relativePath: string): string => cdn.getImageUrl('favicons' + relativePath);

  return (
    <NextHead>
      <title>{fullTitle}</title>
      <meta name="viewport" content="width=device-width,initial-scale=1" />
      <meta httpEquiv="X-UA-Compatible" content="IE=edge,chrome=1" />
      <meta name="description" content={description} />
      {props.creator && <meta name="author" content={props.creator} />}
      {keywordStr && <meta name="keyword" content={keywordStr} />}

      {/* 'Open Graph protocol' enables rich sharing info on Facebook */}
      <meta name="og:title" content={fullTitle} />
      <meta name="og:description" content={description} />
      <meta name="og:type" content={props.isArticle ? 'article' : 'website'} />
      <meta name="og:image" content={getFaviconsPath('/android-chrome-512x512.png')} />

      {/* for sharing to twitter */}
      <meta name="twitter:title" content={fullTitle} />
      <meta name="twitter:description" content={description} />
      <meta name="twitter:card" content="summary_large_image" />
      <meta name="twitter:creator" content={props.creator} />

      {/* favicons should be generated by https://realfavicongenerator.net/ */}
      <link rel="apple-touch-icon" sizes="180x180" href={getFaviconsPath('/apple-touch-icon.png')} />
      <link rel="icon" type="image/png" sizes="32x32" href={getFaviconsPath('/favicon-32x32.png')} />
      <link rel="icon" type="image/png" sizes="16x16" href={getFaviconsPath('/favicon-16x16.png')} />
      <link rel="manifest" href={getFaviconsPath('/site.webmanifest')} />
      <link rel="shortcut icon" href={getFaviconsPath('/favicon.ico')} />
      <meta name="theme-color" content="#ffffff" />

      {/* GA tagmanager setup */}
      <script
        id="tagmanager-init-script"
        dangerouslySetInnerHTML={{
          __html: `
          (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
          new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
          j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
          'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
          })(window,document,'script','dataLayer','${googleAnalyticsId}');
          `,
        }}
      />

      <script
        id="baidu-init-script"
        // strategy="beforeInteractive"
        dangerouslySetInnerHTML={{
          __html: `
            var _hmt = _hmt || [];
            (function() {
             var hm = document.createElement("script");
             hm.src = "https://hm.baidu.com/hm.js?2321846dd5ff3a4f0ffeef2e2a25e218";
             var s = document.getElementsByTagName("script")[0]; 
             s.parentNode.insertBefore(hm, s);
            })();
        `,
        }}
      />
      {props.children}
    </NextHead>
  );
};
